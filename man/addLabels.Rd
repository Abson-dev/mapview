% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/addLabels.R
\name{addLabels}
\alias{addLabels}
\title{Add labels to \code{mapview} object}
\usage{
addLabels(map, data = map@object[[1]], label, ...)
}
\arguments{
\item{map}{A \code{mapview} object.}

\item{data}{A \code{sf} or \code{Spatial*} object used for label placement,
defaults to the locations of the first dataset in 'map'.}

\item{label}{The labels to be placed at the positions indicated by 'data' as
\code{character}, or any vector that can be coerced to this type.}

\item{...}{Additional arguments passed to
\code{\link[leaflet]{addLabelOnlyMarkers}}.}
}
\value{
A labelled \strong{mapview} object.
}
\description{
Being a wrapper around \code{\link[leaflet]{addLabelOnlyMarkers}}, this
function provides a smart-and-easy solution to add custom text labels to an
existing \code{mapview} object.
}
\examples{
\dontrun{
## leaflet label display options
library(leaflet)

lopt = labelOptions(noHide = TRUE
                    , direction = 'top'
                    , textOnly = TRUE)

## point labels
m1 = mapview(breweries)
l1 = addLabels(m1
               , label = breweries$number.of.types
               , labelOptions = lopt)

## polygon centroid labels
m2 = mapview(franconia)
l2 = addLabels(m2
               , label = franconia$NAME_ASCI
               , labelOptions = lopt)

## custom labels
m3 = m1 + m2
l3 = addLabels(m3
               , data = franconia
               , label = franconia$NAME_ASCI
               , labelOptions = lopt)
}

}
\seealso{
\code{\link[leaflet]{addLabelOnlyMarkers}}.
}
\author{
Florian Detsch
}
