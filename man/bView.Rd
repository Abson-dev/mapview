% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bView.R
\docType{bView}
\name{bView}
\alias{bView}
\title{Leaflet maps for big data}
\usage{
bView(data, col = "rgb", width = NULL, height = NULL, zcol = NULL,
  map = NULL, burst = FALSE, radius = 10, map.types = c("OpenStreetMap",
  "Esri.WorldImagery", "Thunderforest.Landscape"), legend = FALSE,
  legend.opacity = 1, verbose = mapviewOptions(console = FALSE)$verbose,
  layer.name = deparse(substitute(data, env = parent.frame())),
  popup = NULL, ...)
}
\arguments{
\item{data}{a \code{\link{sp}} SpatialPointDataframe object (currently only)}

\item{width}{a valid CSS width}

\item{height}{a valid CSS width}

\item{zcol}{attribute name(s) or column number(s) in attribute table
of the column(s) to be rendered (up to now only numeric is supported)}

\item{burst}{whether to show all (TRUE) or only one (FALSE) layers}

\item{radius}{attribute name(s) or column number(s) in attribute table
of the column(s) to be used for defining the size of circles}

\item{color}{colors as:  (green,red,blue,teal,yellow,random) for the points/polygons/lines}
}
\description{
bView is a first prototype for rendering big data (points) on base of leaflet maps utilizing webGL and htmlwidgets.

This is a modified and adapted implementation of \url{https://github.com/robertleeplummerjr/Leaflet.glify}
}
\note{
It is import to understand that the accurracy of the rendering is about
 1.1 m at the equator up to 20 cm around 75Â°. You will get an arbitrary result if the
  accurracy of your points requires more than 5 decimal digits.
}
\examples{

### we need sp and raster ###
 library(sp)
 library(raster)
 library("rgdal")
 library("gdalUtils")
 library(downloader)
 library(profvis)

# take gadm data
 data(gadmCHE)

# map it with mapview
 mapview(gadmCHE)

# map it with bView
 bView(gadmCHE)

 # for even  more suisse data we use geofabrik
 download("http://download.geofabrik.de/europe/switzerland-latest.shp.zip",dest="switzerland.zip", mode = "wb")
 unzip ("switzerland.zip",exdir = "./")

 # get information of landuse
 ogrInfo(".", "landuse")

 # read it to a sp object
 landuseCH<- readOGR(".","landuse")

# map it with mapview
 mapview(landuseCH)

# map it with bView
 bView(landuseCH)

 # get information of roads
 ogrInfo(".", "roads")

 # read it to a sp object
 roadsCH<- readOGR(".","roads")

# map it with mapview
 mapview(roadsCH)

# map it with bView
 bView(roadsCH)
### some benchmarks
 system.time(mapview(landuseCH))
 system.time(bView(landuseCH))
 system.time(mapview(roadsCH))
 system.time(bView(roadsCH))


}
\author{
Chris Reudenbach
}

