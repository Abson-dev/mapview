% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plainView.R
\docType{methods}
\name{plainView}
\alias{plainView}
\alias{plainView,RasterLayer-method}
\alias{plainView,RasterStackBrick-method}
\alias{plainView,Satellite-method}
\alias{plainView,SpatialPixelsDataFrame-method}
\title{View spatial objects interactively withour backgreound map but in any CRS}
\usage{
\S4method{plainView}{RasterLayer}(x, map = NULL,
  maxpixels = mapviewOptions(console = FALSE)$maxpixels,
  color = mapViewPalette(7), na.color = mapviewOptions(console =
  FALSE)$nacolor, use.layer.names = FALSE, values = NULL,
  layer.opacity = 0.8, legend = TRUE, legend.opacity = 1, trim = TRUE,
  verbose = mapviewOptions(console = FALSE)$verbose,
  layer.name = deparse(substitute(x, env = parent.frame())), ...)

\S4method{plainView}{RasterStackBrick}(x, map = NULL,
  maxpixels = mapviewOptions(console = FALSE)$maxpixels,
  color = mapViewPalette(7), na.color = mapviewOptions(console =
  FALSE)$nacolor, values = NULL, legend = FALSE, legend.opacity = 1,
  trim = TRUE, verbose = mapviewOptions(console = FALSE)$verbose, ...)

\S4method{plainView}{Satellite}(x, ...)

\S4method{plainView}{SpatialPixelsDataFrame}(x, zcol = NULL, ...)
}
\arguments{
\item{x}{a \code{\link{raster}}* object}

\item{map}{an optional existing map to be updated/added to}

\item{maxpixels}{integer > 0. Maximum number of cells to use for the plot.
If maxpixels < \code{ncell(x)}, sampleRegular is used before plotting.}

\item{color}{color (palette) of the points/polygons/lines/pixels}

\item{na.color}{color for missing values}

\item{use.layer.names}{should layer names of the Raster* object be used?}

\item{values}{a vector of values for the visualisation of the layers.
Per default these are calculated based on the supplied raster* object.}

\item{layer.opacity}{opacity of the raster layer(s)}

\item{legend}{should a legend be plotted}

\item{legend.opacity}{opacity of the legend}

\item{trim}{should the raster be trimmed in case there are NAs on the egdes}

\item{verbose}{should some details be printed during the process}

\item{layer.name}{the name of the layer to be shown on the map}

\item{...}{additional arguments passed on to repective functions.
See \code{\link{addRasterImage}}, \code{\link{addCircles}},
\code{\link{addPolygons}}, \code{\link{addPolylines}} for details}

\item{map.types}{character spcifications for the base maps.
see \url{http://leaflet-extras.github.io/leaflet-providers/preview/}
for available options.}

\item{popup}{a character vector of the HTML content for the popups. See
\code{\link{addControl}} for details.}
}
\description{
this function produces an interactive GIS-like view of the specified
spatial object(s) on a plain grey background but for any CRS.
}
\section{Methods (by class)}{
\itemize{
\item \code{RasterStackBrick}: \code{\link{stack}} / \code{\link{brick}}

\item \code{Satellite}: \code{\link{satellite}}

\item \code{SpatialPixelsDataFrame}: \code{\link{SpatialPixelsDataFrame}}
}}
\examples{
\dontrun{
plainView()

### raster data ###
library(sp)
library(raster)

data(meuse.grid)
coordinates(meuse.grid) = ~x+y
proj4string(meuse.grid) <- CRS("+init=epsg:28992")
gridded(meuse.grid) = TRUE
meuse_rst <- stack(meuse.grid)

# raster stack
m1 <- plainView(meuse_rst)
m1

# factorial RasterLayer
m2 <- plainView(raster::as.factor(meuse_rst[[4]]))
m2

# SpatialPixelsDataFrame
plainView(meuse.grid, zcol = "soil")


### point vector data ###
## SpatialPointsDataFrame ##
data(meuse)
coordinates(meuse) <- ~x+y
proj4string(meuse) <- CRS("+init=epsg:28992")

# all layers of meuse
plainView(meuse, burst = TRUE)

# only one layer, all info in popups
plainView(meuse)

## SpatialPoints ##
meuse_pts <- as(meuse, "SpatialPoints")
plainView(meuse_pts)



### overlay vector on top of raster ###
plainView(meuse.grid, zcol = "ffreq") + meuse

### polygon vector data ###
data("gadmCHE")
m <- plainView(gadmCHE)
m

## points on polygons ##
centres <- data.frame(coordinates(gadmCHE))
names(centres) <- c("x", "y")
coordinates(centres) <- ~ x + y
projection(centres) <- projection(gadmCHE)
m + centres

### lines vector data
data("atlStorms2005")
plainView(atlStorms2005)
plainView(atlStorms2005, burst = TRUE)
}

}
\author{
Tim Appelhans
}

